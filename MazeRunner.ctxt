#BlueJ class context
comment0.params=
comment0.target=MazeRunner()
comment0.text=\r\n\ Creates\ a\ new\ MazeRunner\ object.\r\n
comment1.params=
comment1.target=void\ myProgram()
comment1.text=\r\n\ The\ code\ below\ is\ myProgram\ that\r\n\ contains\ grouped\ methods\ and\ behaviors\r\n\ for\ the\ subclass\ Jeroo,\ MazeRunner,\ \r\n\ to\ execute\ in\ the\ island.\ The\ goal\ for\ the\r\n\ MazeRunner\ to\ be\ collecting\ all\ the\ flowers\r\n\ and\ removing\ all\ the\ net\ in\ the\ island\ and\r\n\ ending\ at\ the\ south-east\ of\ the\ island.\r\n\ The\ first\ two\ codes\ is\ assigning\ variables\r\n\ to\ the\ coordinates\ at\ the\ south-east\ of\ the\ island\r\n\ so\ that\ the\ MazeRunner\ can\ stop\ there\r\n\ when\ the\ following\ conditions\ are\ met.\r\n
comment2.params=
comment2.target=void\ runAlongPath()
comment2.text=\r\n\ The\ following\ methods\ below\ is\ telling\r\n\ MazeRunner\ to\ walk\ or\ run\ on\ the\ narrow\r\n\ pathways\ of\ the\ island\ and\ picking\ flowers,\r\n\ and\ also\ removing\ nets\ on\ the\ way.\ \r\n\ It\ is\ also\ followed\ with\ additional\r\n\ methods\ such\ as\ if\ it\ sees\ water\ ahead,\r\n\ turn\ a\ different\ direction\ and\ change\ routes\r\n\ to\ collect\ flowers\ and\ remove\ nets\ in\ \r\n\ different\ path\ ways.\r\n
comment3.params=
comment3.target=boolean\ stop()
comment3.text=\r\n\ The\ following\ method\ below\ evaluates\ the\ boolean\r\n\ of\ stop\ and\ checks\ each\ method\ in\ myProgram\ and\r\n\ say\ if\ they\ are\ true\ or\ false\ to\ either\ execute\r\n\ the\ methods\ and\ instructions.\r\n\ \r\n\ @return\ true\ /\ false\ has\ ended.\r\n
comment4.params=
comment4.target=void\ turnAtEndRoad()
comment4.text=\r\n\ The\ following\ method\ below\ will\ make\ the\ MazeRunner\r\n\ change\ directions\ and\ walk\ in\ a\ different\ pathway\ \r\n\ when\ it\ sees\ water\ ahead\ and\ on\ either\ left\ or\ right,\ or\ \r\n\ both.\ \r\n
comment5.params=
comment5.target=void\ removeNet()
comment5.text=\r\n\ The\ following\ method\ below\ holds\ a\ statement\r\n\ that\ if\ the\ MazeRunner\ sees\ a\ net\ ahead\ of\ \r\n\ itself\ while\ hopping\ along\ the\ pathway,\r\n\ it\ will\ remove\ the\ nets\ and\ keep\ on\ \r\n\ walking\ along\ the\ pathway.\r\n
comment6.params=
comment6.target=void\ seeNoWater()
comment6.text=\r\n\ The\ following\ method\ below\ is\ telling\r\n\ the\ MazeRunner\ to\ keep\ walking\ or\ hopping\r\n\ along\ the\ pathway\ as\ long\ as\ it\ is\ clear\r\n\ ahead\ and\ also\ collect\ any\ flowers\ it\ sees\ \r\n\ ahead\ while\ walking.\r\n\ There\ is\ a\ statement\ declared\ when\ all\ the\r\n\ flowers\ are\ picked,\ all\ nets\ removed,\ and\ \r\n\ then\ when\ the\ MazeRunner\ ends\ up\ at\ the\ \r\n\ south-east\ of\ the\ island,\ it\ will\ stop\ there.\r\n
comment7.params=
comment7.target=void\ changeRoute()
comment7.text=\r\n\ The\ following\ methods\ below\ is\ giving\r\n\ instructions\ to\ the\ MazeRunner\ when\ it\ is\ stuck\r\n\ and\ so\ that\ it\ can\ change\ directions\ at\ different\r\n\ situations\ for\ example\ like\ when\ it\ is\ clear\ left,\r\n\ clear\ right,\ NOT\ clear\ ahead,\ NOT\ facing\ east,\ and\r\n\ NOT\ facing\ north\ will\ make\ the\ MazeRunner\ turn\ right.\r\n\ After\ changing\ the\ directions\ under\ certain\ conditions,\r\n\ the\ Jeroo\ will\ keep\ on\ executing\ the\ program\ and\ \r\n\ walk\ along\ the\ path\ till\ there\ are\ no\ flowers\ and\ nets\r\n\ on\ the\ island.\r\n
comment8.params=
comment8.target=int\ getEndX()
comment8.text=\r\n\ The\ code\ below\ is\ declaring\ an\ integer\ boolean\r\n\ and\ getting\ the\ points\ at\ the\ south-east\ of\ the\r\n\ island\ so\ that\ it\ can\ be\ assigned\ to\ the\ MazeRunner\r\n\ to\ stop\ there.\ The\ code\ getEndX()\ is\ implemented\ \r\n\ on\ the\ x-axis\ or\ the\ width\ and\ minus\ 2\ to\ find\ that\r\n\ coordination\ at\ the\ south-east\ of\ the\ island.\r\n\ \r\n\ @return\ true\ /\ false\ has\ ended.\r\n
comment9.params=
comment9.target=int\ getEndY()
comment9.text=\r\n\ The\ code\ below\ is\ declaring\ an\ integer\ boolean\r\n\ and\ getting\ the\ points\ at\ the\ south-east\ of\ the\r\n\ island\ so\ that\ it\ can\ be\ assigned\ to\ the\ MazeRunner\r\n\ to\ stop\ there.\ The\ code\ getEndY()\ is\ implemented\ \r\n\ on\ the\ y-axis\ or\ the\ height\ and\ minus\ 2\ to\ find\ that\r\n\ coordinatAion\ at\ the\ south-east\ of\ the\ island.\r\n\ \r\n\ @return\ true\ /\ false\ has\ ended.\r\n
numComments=10
